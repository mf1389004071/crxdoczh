// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace": "extension",
//@    "description": "The <code>chrome.extension</code> API has utilities that can be used by any extension page. It includes support for exchanging messages between an extension and its content scripts or between extensions, as described in detail in <a href='messaging.html'>Message Passing</a>.",
    "description": "<code>chrome.extension</code> API 包含任何扩展程序页面都能使用的实用方法。它包括在扩展程序和内容脚本之间或者两个扩展程序之间交换消息的支持，这一部分内容在<a href='messaging.html'>消息传递</a>中详细描述。",
    "compiler_options": {
      "implemented_in": "chrome/browser/extensions/api/module/module.h"
    },
    "properties": {
      "lastError": {
        "type": "object",
        "optional": true,
//@        "description": "Set for the lifetime of a callback if an ansychronous extension api has resulted in an error. If no error has occured lastError will be <var>undefined</var>.",
        "description": "如果异步扩展程序 API 发生错误，将在回调函数的生命周期内设置该属性。如果没有错误发生，lastError 将为 <var>undefined</var>。",
        "properties": {
//@          "message": { "type": "string", "description": "Description of the error that has taken place." }
          "message": { "type": "string", "description": "对发生的错误的描述。" }
        }
      },
      "inIncognitoContext": {
        "type": "boolean",
        "optional": true,
//@        "description": "True for content scripts running inside incognito tabs, and for extension pages running inside an incognito process. The latter only applies to extensions with 'split' incognito_behavior."
        "description": "如果内容脚本正在隐身标签页中运行，或者扩展程序页面在隐身进程中运行，则为 true。后一种情况只适用于具有分离（\"split\"）隐身行为的扩展程序。"
      }
    },
    "functions": [
      {
        "name": "sendRequest",
        "nocompile": true,
//@        "deprecated": "Please use $(ref:runtime.sendMessage).",
        "deprecated": "请使用 $(ref:runtime.sendMessage)。",
        "type": "function",
        "allowAmbiguousOptionalArguments": true,
//@        "description": "Sends a single request to other listeners within the extension. Similar to $(ref:runtime.connect), but only sends a single request with an optional response. The $(ref:extension.onRequest) event is fired in each page of the extension.",
        "description": "向扩展程序中的其他监听者（或另一个扩展程序/应用）发送单个请求。与 $(ref:runtime.connect) 类似，但是只发送具有可选回应的单个请求。$(ref:extension.onRequest) 事件将在扩展程序的每一个页面中产生。",
        "parameters": [
//@          {"type": "string", "name": "extensionId", "optional": true, "description": "The extension ID of the extension you want to connect to. If omitted, default is your own extension."},
          {"type": "string", "name": "extensionId", "optional": true, "description": "您希望连接的扩展程序标识符，如果省略，默认为您自己的扩展程序。"},
          { "type": "any", "name": "request" },
          {
            "type": "function",
            "name": "responseCallback",
            "optional": true,
            "parameters": [
              {
                "name": "response",
                "type": "any",
//@                "description": "The JSON response object sent by the handler of the request. If an error occurs while connecting to the extension, the callback will be called with no arguments and $(ref:runtime.lastError) will be set to the error message."
                "description": "请求处理程序发出的 JSON 响应对象。如果连接到指定标签页的过程中发生错误，将不传递参数调用回调函数，并将 $(ref:runtime.lastError) 设置为错误消息。"
              }
            ]
          }
        ]
      },
      {
        "name": "getURL",
        "nocompile": true,
        "type": "function",
//@        "description": "Converts a relative path within an extension install directory to a fully-qualified URL.",
        "description": "将扩展程序安装目录中的相对路径转换为完整的 URL。",
        "parameters": [
          {
            "type": "string",
            "name": "path",
//@            "description": "A path to a resource within an extension expressed relative to its install directory."
            "description": "扩展程序内的资源，以相对于安装目录的路径表示。"
          }
        ],
        "returns": {
          "type": "string",
//@          "description": "The fully-qualified URL to the resource."
          "description": "指向资源的完整 URL。"
        }
      },
      {
        "name": "getViews",
        "nocompile": true,
        "type": "function",
//@        "description": "Returns an array of the JavaScript 'window' objects for each of the pages running inside the current extension.",
        "description": "返回一个数组，含有每一个在当前扩展程序中运行的页面的JavaScript window 对象。",
        "parameters": [
          {
            "type": "object",
            "name": "fetchProperties",
            "optional": true,
            "properties": {
              "type": {
                "type": "string",
                "enum": ["tab", "infobar", "notification", "popup"],
                "optional": true,
//@                "description": "The type of view to get. If omitted, returns all views (including background pages and tabs). Valid values: 'tab', 'infobar', 'notification', 'popup'."
                "description": "要获取的视图类型。如果省略，返回所有视图（包括后台页面和标签页）。有效值为：\"tab\"（标签页）、\"infobar\"（信息栏）、\"notification\"（通知）、\"popup\"（弹出窗口）。"
              },
              "windowId": {
                "type": "integer",
                "optional": true,
//@                "description": "The window to restrict the search to. If omitted, returns all views."
                "description": "将搜索限制在指定窗口中。如果省略，返回所有视图。"
              }
            }
          }
        ],
        "returns": {
          "type": "array",
//@          "description": "Array of global objects",
          "description": "全局对象的数组。",
          "items": {
            "name": "viewGlobals",
            "type": "object",
            "isInstanceOf": "Window",
            "additionalProperties": { "type": "any" }
          }
        }
      },
      {
        "name": "getBackgroundPage",
        "nocompile": true,
        "type": "function",
//@        "description": "Returns the JavaScript 'window' object for the background page running inside the current extension. Returns null if the extension has no background page.",
        "description": "返回运行在当前扩展程序中的后台网页的 JavaScript window 对象。如果扩展程序没有后台网页则返回 null。",
        "parameters": [],
        "returns": {
            "type": "object",
            "optional": true,
            "name": "backgroundPageGlobal",
            "isInstanceOf": "Window",
            "additionalProperties": { "type": "any" }
         }
      },
      {
        "name": "getExtensionTabs",
        "nocompile": true,
//@        "deprecated": "Please use $(ref:extension.getViews) <code>{type: \"tab\"}</code>.",
        "deprecated": "请使用 $(ref:extension.getViews) <code>{type: \"tab\"}</code>。",
        "type": "function",
        "maximumManifestVersion": 1,
//@        "description": "Returns an array of the JavaScript 'window' objects for each of the tabs running inside the current extension. If <code>windowId</code> is specified, returns only the 'window' objects of tabs attached to the specified window.",
        "description": "返回包含 JavaScript 'window' 对象的数组，对应当前扩展程序中运行的每一个标签页。如果指定了 <code>windowId</code>，只返回附加到指定窗口的标签页的 'window' 对象。",
        "parameters": [
          {"type": "integer", "name": "windowId", "optional": true}
        ],
        "returns": {
          "type": "array",
//@          "description": "Array of global window objects",
          "description": "全局 window 对象数组。",
          "items": {
            "type": "object",
            "name": "tabGlobals",
            "isInstanceOf": "Window",
            "additionalProperties": { "type": "any" }
          }
        }
      },
      {
        "name": "isAllowedIncognitoAccess",
        "type": "function",
//@        "description": "Retrieves the state of the extension's access to Incognito-mode (as determined by the user-controlled 'Allowed in Incognito' checkbox.",
        "description": "获取该扩展程序能否在隐身模式中使用（由用户控制的“在隐身模式下启用”复选框决定）的状态。",
        "min_version": "12.0.706.0",
        "parameters": [
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "isAllowedAccess",
                "type": "boolean",
//@                "description": "True if the extension has access to Incognito mode, false otherwise."
                "description": "如果该扩展程序允许在隐身模式下使用则为 true，否则为 false。"
              }
            ]
          }
        ]
      },
      {
        "name": "isAllowedFileSchemeAccess",
        "type": "function",
//@        "description": "Retrieves the state of the extension's access to the 'file://' scheme (as determined by the user-controlled 'Allow access to File URLs' checkbox.",
        "description": "获取该扩展程序能否访问 file:// 协议（由用户控制的“允许访问文件网址”复选框决定）的状态。",
        "min_version": "12.0.706.0",
        "parameters": [
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "isAllowedAccess",
                "type": "boolean",
//@                "description": "True if the extension can access the 'file://' scheme, false otherwise."
                "description": "如果该扩展程序可以访问 file:// 协议则为 true，否则为 false。"
              }
            ]
          }
        ]
      },
      {
        "name": "setUpdateUrlData",
        "type": "function",
//@        "description": "Sets the value of the ap CGI parameter used in the extension's update URL.  This value is ignored for extensions that are hosted in the Chrome Extension Gallery.",
        "description": "设置扩展程序更新 URL 中使用的 CGI 参数 ap 的值，对于托管在 Chrome 网上应用店的扩展程序将忽略这一值。",
        "parameters": [
          {"type": "string", "name": "data", "maxLength": 1024}
        ]
      }
    ],
    "events": [
      {
        "name": "onRequest",
//@        "deprecated": "Please use $(ref:runtime.onMessage).",
        "deprecated": "请使用 $(ref:runtime.onMessage)。",
        "type": "function",
        "options": {
          "unmanaged": true
        },
//@        "description": "Fired when a request is sent from either an extension process or a content script.",
        "description": "扩展程序进程或内容脚本发送请求时产生。",
        "parameters": [
//@          {"name": "request", "type": "any", "optional": true, "description": "The request sent by the calling script."},
          {"name": "request", "type": "any", "optional": true, "description": "调用脚本发送的请求。"},
          {"name": "sender", "$ref": "runtime.MessageSender" },
//@          {"name": "sendResponse", "type": "function", "description": "Function to call (at most once) when you have a response. The argument should be any JSON-ifiable object, or undefined if there is no response. If you have more than one <code>onRequest</code> listener in the same document, then only one may send a response." }
          {"name": "sendResponse", "type": "function", "description": "有响应时调用的函数（最多调用一次），参数必须是可以转换为 JSON 的对象，或者没有响应时为 undefined。如果在同一文档中有多个 <code>onRequest</code> 监听器，只有其中一个可以发送响应。" }
        ]
      },
      {
        "name": "onRequestExternal",
//@        "deprecated": "Please use $(ref:runtime.onMessageExternal).",
        "deprecated": "请使用 $(ref:runtime.onMessageExternal)。",
        "type": "function",
        "options": {
          "unmanaged": true
        },
//@        "description": "Fired when a request is sent from another extension.",
        "description": "请求从另一个扩展程序发送时产生。",
        "parameters": [
//@          {"name": "request", "type": "any", "optional": true, "description": "The request sent by the calling script."},
          {"name": "request", "type": "any", "optional": true, "description": "调用脚本发送的请求。"},
          {"name": "sender", "$ref": "runtime.MessageSender" },
//@          {"name": "sendResponse", "type": "function", "description": "Function to call when you have a response. The argument should be any JSON-ifiable object, or undefined if there is no response." }
          {"name": "sendResponse", "type": "function", "description": "有响应时调用的函数（最多调用一次），参数必须是可以转换为 JSON 的对象，或者没有响应时为 undefined。" }
        ]
      }
    ]
  }
]
