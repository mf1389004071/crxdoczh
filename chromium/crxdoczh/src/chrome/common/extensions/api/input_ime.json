// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace": "input.ime",
//@    "description": "Use the <code>chrome.input.ime</code> API to implement a custom IME for Chrome OS. This allows your extension to handle keystrokes, set the composition, and manage the candidate window.",
    "description": "使用 <code>chrome.input.ime</code> API 为 Chrome OS 实现自定义的输入法，它允许您的扩展程序处理键盘输入、设置候选内容及管理候选窗口。",
    "platforms": ["chromeos"],
    "types": [
      {
        "id": "KeyboardEvent",
        "type": "object",
//@        "description": "See http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent",
        "description": "参见 <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent\">http://www.w3.org/TR/DOM-Level-3-Events/#events-KeyboardEvent</a>。",
        "properties": {
//@          "type": {"type": "string", "description": "One of keyup or keydown.", "enum": ["keyup", "keydown"]},
          "type": {"type": "string", "description": "\"keyup\"（按键弹起）或 \"keydown\"（按键按下）。", "enum": ["keyup", "keydown"]},
//@          "requestId": {"type": "string", "description": "The ID of the request."},
          "requestId": {"type": "string", "description": "请求标识符。"},
//@          "extensionId": {"type": "string", "optional": true, "description": "The extension ID of the sender of this keyevent."},
          "extensionId": {"type": "string", "optional": true, "description": "发送键盘事件的扩展程序标识符。"},
//@          "key": {"type": "string", "description": "Value of the key being pressed"},
          "key": {"type": "string", "description": "按下的按键值。"},
//@          "code": {"type": "string", "description": "Value of the physical key being pressed. The value is not affected by current keyboard layout or modifier state."},
          "code": {"type": "string", "description": "按下的物理按键的值，不受当前键盘布局或组合键状态的影响。"},
//@          "altKey": {"type": "boolean", "optional": true, "description": "Whether or not the ALT key is pressed."},
          "altKey": {"type": "boolean", "optional": true, "description": "是否按下了 Alt 键。"},
//@          "ctrlKey": {"type": "boolean", "optional": true, "description": "Whether or not the CTRL key is pressed."},
          "ctrlKey": {"type": "boolean", "optional": true, "description": "是否按下了 Ctrl 键。"},
//@          "shiftKey": {"type": "boolean", "optional": true, "description": "Whether or not the SHIFT key is pressed."},
          "shiftKey": {"type": "boolean", "optional": true, "description": "是否按下了 Shift 键。"},
//@          "capsLock": {"type": "boolean", "optional": true, "description": "Whether or not the CAPS_LOCK is enabled."}
          "capsLock": {"type": "boolean", "optional": true, "description": "Caps Lock 键是否启用。"}
        }
      },
      {
        "id": "InputContext",
        "type": "object",
//@        "description": "Describes an input Context",
        "description": "描述输入上下文。",
        "properties": {
//@          "contextID": {"type": "integer", "description": "This is used to specify targets of text field operations.  This ID becomes invalid as soon as onBlur is called."},
          "contextID": {"type": "integer", "description": "该属性用来指定文本框操作的目标，一旦接收到 onBlur 事件该标识符就不再有效。"},
//@          "type": {"type": "string", "description": "Type of value this text field edits, (Text, Number, URL, etc)", "enum": ["text", "search", "tel", "url", "email", "number"]}
          "type": {"type": "string", "description": "该文本框编辑的值的类型：文本、数字、URL 等。Type of value this text field edits, (Text, Number, URL, etc)", "enum": ["text", "search", "tel", "url", "email", "number"]}
        }
      },
      {
        "id": "MenuItem",
        "type": "object",
//@        "description": "A menu item used by an input method to interact with the user from the language menu.",
        "description": "在语言菜单中，输入法用来与用户交互的菜单项。",
        "properties": {
//@          "id": {"type": "string", "description": "String that will be passed to callbacks referencing this MenuItem."},
          "id": {"type": "string", "description": "传递给回调函数的字符串，用来引用这一菜单项。"},
//@          "label": {"type": "string", "optional": true, "description": "Text displayed in the menu for this item."},
          "label": {"type": "string", "optional": true, "description": "这一菜单项在菜单中显示的文本。"},
          "style": {
            "type": "string",
            "optional": true,
//@            "description": "Enum representing if this item is: check, radio, or a separator.  Radio buttons between separators are considered grouped.",
            "description": "代表这一菜单项是否是：\"check\"（复选）、\"radio\"（单选）或 \"separator\"（分隔符）的枚举值。在分隔符之间的单选按钮将认为是同一组的。",
            "enum": ["check", "radio", "separator"]
          },
//@          "visible": {"type": "boolean", "optional": true, "description": "Indicates this item is visible."},
          "visible": {"type": "boolean", "optional": true, "description": "表示这一菜单项是否可见。"},
//@          "checked": {"type": "boolean", "optional": true, "description": "Indicates this item should be drawn with a check."},
          "checked": {"type": "boolean", "optional": true, "description": "表示这一菜单项是否已勾选。"},
//@          "enabled": {"type": "boolean", "optional": true, "description": "Indicates this item is enabled."}
          "enabled": {"type": "boolean", "optional": true, "description": "表示这一菜单项是否已启用。"}
        }
      }
    ],
    "functions": [
      {
        "name": "setComposition",
        "type": "function",
//@        "description": "Set the current composition. If this extension does not own the active IME, this fails.",
        "description": "设置当前的候选内容。如果当前扩展程序没有独占当前输入法，该方法将会失败。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "contextID": {
//@                "description": "ID of the context where the composition text will be set",
                "description": "需要设置候选本文的上下文标识符。",
                "type": "integer"
              },
              "text": {
//@                "description": "Text to set",
                "description": "要设置的文本。",
                "type": "string"
              },
              "selectionStart": {
//@                "description": "Position in the text that the selection starts at.",
                "description": "选定内容在文本中的起始位置。",
                "optional": true,
                "type": "integer"
              },
              "selectionEnd": {
//@                "description": "Position in the text that the selection ends at.",
                "description": "选定内容在文本中的结束位置。",
                "optional": true,
                "type": "integer"
              },
              "cursor": {
//@                "description": "Position in the text of the cursor.",
                "description": "光标在文本中的位置。",
                "type": "integer"
              },
              "segments": {
//@                "description": "List of segments and their associated types.",
                "description": "片段列表以及与它们相关的类型。",
                "type": "array",
                "optional": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
//@                      "description": "Index of the character to start this segment at",
                      "description": "当前片段开始的字符索引。",
                      "type": "integer"
                    },
                    "end": {
//@                      "description": "Index of the character to end this segment after.",
                      "description": "当前片段结束后的字符索引。",
                      "type": "integer"
                    },
                    "style": {
//@                      "description": "How to render this segment",
                      "description": "如何呈现这一片段。",
                      "enum": ["underline", "doubleUnderline"],
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
//@            "description": "Called when the operation completes with a boolean indicating if the text was accepted or not. On failure, chrome.runtime.lastError is set.",
            "description": "当操作完成时调用，传递一个布尔值，表示文本是否被接受。如果调用失败，将设置 $ref:runtime.lastError。",
            "parameters": [
              {
                "name": "success",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "clearComposition",
        "type": "function",
//@        "description": "Clear the current composition. If this extension does not own the active IME, this fails.",
        "description": "清除当前的候选内容。如果当前扩展程序没有独占当前输入法，该方法将会失败。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "contextID": {
//@                "description": "ID of the context where the composition will be cleared",
                "description": "需要清除候选内容的上下文标识符。",
                "type": "integer"
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
//@            "description": "Called when the operation completes with a boolean indicating if the text was accepted or not. On failure, chrome.runtime.lastError is set.",
            "description": "当操作完成时调用，传递一个布尔值，表示文本是否被接受。如果调用失败，将设置 $ref:runtime.lastError。",
            "parameters": [
              {
                "name": "success",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "commitText",
        "type": "function",
//@        "description": "Commits the provided text to the current input.",
        "description": "将提供的文本提交至当前输入。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "contextID": {
//@                "description": "ID of the context where the text will be committed",
                "description": "需要提交文本的上下文标识符。",
                "type": "integer"
              },
              "text": {
//@                "description": "The text to commit",
                "description": "要提交的文本。",
                "type": "string"
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
//@            "description": "Called when the operation completes with a boolean indicating if the text was accepted or not. On failure, chrome.runtime.lastError is set.",
            "description": "当操作完成时调用，传递一个布尔值，表示文本是否被接受。如果调用失败，将设置 $ref:runtime.lastError。",
            "parameters": [
              {
                "name": "success",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "sendKeyEvents",
        "type": "function",
//@        "description": "Sends the key events.  This function is expected to be used by virtual keyboards.  When key(s) on a virtual keyboard is pressed by a user, this function is used to propagate that event to the system.",
        "description": "发送键盘事件，该函数由虚拟键盘使用。用户按下虚拟键盘上的按键时，该函数可以用来将该事件传播给系统。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "contextID": {
//@                "description": "ID of the context where the key events will be sent",
                "description": "发送键盘事件的上下文标识符。",
                "type": "integer"
              },
              "keyData": {
                "type": "array",
//@                "description": "Data on the key event.",
                "description": "键盘事件的相关数据。",
                "items": {
                  "$ref": "KeyboardEvent"
                }
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
//@            "description": "Called when the operation completes.",
            "description": "操作完成时调用。",
            "parameters": []
          }
        ]
      },
      {
        "name": "hideInputView",
        "type": "function",
//@        "description": "Hides the input view window, which is popped up automatically by system. If the input view window is already hidden, this function will do nothing.",
        "description": "隐藏系统自动弹出的输入视图窗口。如果输入视图窗口已经隐藏，该函数不进行任何操作。",
        "parameters": []
      },
      {
        "name": "setCandidateWindowProperties",
        "type": "function",
//@        "description": "Sets the properties of the candidate window. This fails if the extension doesn't own the active IME",
        "description": "设置候选窗口的属性。如果当前扩展程序没有独占当前输入法，该方法将会失败。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "engineID": {
//@                "description": "ID of the engine to set properties on.",
                "description": "要设置属性的引擎标识符。",
                "type": "string"
              },
              "properties": {
                "type": "object",
                "properties": {
                  "visible": {
                    "type": "boolean",
                    "optional": true,
//@                    "description": "True to show the Candidate window, false to hide it."
                    "description": "要显示候选窗口则为 true，隐藏则为 false。"
                  },
                  "cursorVisible": {
                    "type": "boolean",
                    "optional": true,
//@                    "description": "True to show the cursor, false to hide it."
                    "description": "要显示光标则为 true，隐藏则为 false。"
                  },
                  "vertical": {
                    "type": "boolean",
                    "optional": true,
//@                    "description": "True if the candidate window should be rendered vertical, false to make it horizontal."
                    "description": "如果候选窗口竖排则为 true，横排则为 false。"
                  },
                  "pageSize": {
                    "type": "integer",
                    "optional": true,
//@                    "description": "The number of candidates to display per page."
                    "description": "每一页显示的候选项数目。"
                  },
                  "auxiliaryText": {
                    "type": "string",
                    "optional": true,
//@                    "description": "Text that is shown at the bottom of the candidate window."
                    "description": "候选窗口底部显示的文字。"
                  },
                  "auxiliaryTextVisible": {
                    "type": "boolean",
                    "optional": true,
//@                    "description": "True to display the auxiliary text, false to hide it."
                    "description": "要显示辅助文字则为 true，隐藏则为 false。"
                  },
                  "windowPosition": {
                    "type": "string",
//@                    "description": "Where to display the candidate window. If set to 'cursor', the window follows the cursor. If set to 'composition', the window is locked to the beginning of the composition.",
                    "description": "显示候选窗口的位置。如果设置为 'cursor'，窗口会跟随光标；如果设置为 'composition'，窗口会固定在候选内容的开头。",
                    "enum": ["cursor", "composition"],
                    "optional": true
                  }
                }
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
//@            "description": "Called when the operation completes.",
            "description": "操作完成时调用。",
            "parameters": [
              {
                "name": "success",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "setCandidates",
        "type": "function",
//@        "description": "Sets the current candidate list. This fails if this extension doesn't own the active IME",
        "description": "设置当前的候选列表。如果当前扩展程序没有独占当前输入法，该方法将会失败。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "contextID": {
//@                "description": "ID of the context that owns the candidate window.",
                "description": "拥有候选窗口的上下文标识符。",
                "type": "integer"
              },
              "candidates": {
//@                "description": "List of candidates to show in the candidate window",
                "description": "在候选窗口中显示的候选项列表。",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
//@                    "candidate": {"type": "string", "description": "The candidate"},
                    "candidate": {"type": "string", "description": "候选项。"},
//@                    "id": {"type": "integer", "description": "The candidate's id"},
                    "id": {"type": "integer", "description": "候选项标识符。"},
//@                    "parentId": {"type": "integer", "optional": true, "description": "The id to add these candidates under"},
                    "parentId": {"type": "integer", "optional": true, "description": "将这些候选项添加至其下的标识符。"},
//@                    "label": {"type": "string", "optional": true, "description": "Short string displayed to next to the candidate, often the shortcut key or index"},
                    "label": {"type": "string", "optional": true, "description": "显示在候选项旁边的短字符串，通常为快捷键或索引。"},
//@                    "annotation": {"type": "string", "optional": true, "description": "Additional text describing the candidate"},
                    "annotation": {"type": "string", "optional": true, "description": "描述候选项的附加文字。"},
                    "usage": {
                      "type": "object",
                      "optional": true,
//@                      "description": "The usage or detail description of word.",
                      "description": "词语的用法或详细描述。",
                      "properties": {
//@                        "title": { "type": "string", "description": "The title string of details description."},
                        "title": { "type": "string", "description": "详细描述的标题字符串。"},
//@                        "body": { "type": "string", "description": "The body string of detail description."}
                        "body": { "type": "string", "description": "详细描述的正文字符串。"}
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
//@            "description": "Called when the operation completes.",
            "description": "操作完成时调用。",
            "parameters": [
              {
                "name": "success",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "setCursorPosition",
        "type": "function",
//@        "description": "Set the position of the cursor in the candidate window. This is a no-op if this extension does not own the active IME.",
        "description": "设置候选窗口中的光标位置。如果当前扩展程序没有独占当前输入法，则不进行任何操作。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "contextID": {
//@                "description": "ID of the context that owns the candidate window.",
                "description": "拥有候选窗口的上下文标识符。",
                "type": "integer"
              },
              "candidateID": {
//@                "description": "ID of the candidate to select.",
                "description": "选定的候选项标识符。",
                "type": "integer"
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
//@            "description": "Called when the operation completes",
            "description": "操作完成时调用。",
            "parameters": [
              {
                "name": "success",
                "type": "boolean"
              }
            ]
          }
        ]
      },
      {
        "name": "setMenuItems",
        "type": "function",
//@        "description": "Adds the provided menu items to the language menu when this IME is active.",
        "description": "当前输入法处于活动状态时，向语言菜单添加提供的菜单项。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "engineID": {
//@                "description": "ID of the engine to use",
                "description": "要使用的引擎标识符。",
                "type": "string"
              },
              "items": {
//@                "description": "MenuItems to add. They will be added in the order they exist in the array.",
                "description": "要添加的菜单项，将按照数组中出现的顺序添加。",
                "type": "array",
                "items": {
                  "$ref": "MenuItem"
                }
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "description": "",
            "parameters": []
          }
        ]
      },
      {
        "name": "updateMenuItems",
        "type": "function",
//@        "description": "Updates the state of the MenuItems specified",
        "description": "更新指定菜单项的状态。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "engineID": {
//@                "description": "ID of the engine to use",
                "description": "要使用的引擎标识符。",
                "type": "string"
              },
              "items": {
//@                "description": "Array of MenuItems to update",
                "description": "要更新的菜单项数组。",
                "type": "array",
                "items": {
                  "$ref": "MenuItem"
                }
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
//@            "description": "Called when the operation completes",
            "description": "操作完成时调用。",
            "parameters": []
          }
        ]
      },
      {
        "name": "deleteSurroundingText",
        "type": "function",
//@        "description": "Deletes the text around the caret.",
        "description": "删除光标周围的文本。",
        "parameters": [
          {
            "name": "parameters",
            "type": "object",
            "properties": {
              "engineID": {
                "type": "string",
//@                "description": "ID of the engine receiving the event."
                "description": "接收该事件的引擎标识符。"
              },
              "contextID": {
                "type": "integer",
//@                "description": "ID of the context where the surrounding text will be deleted."
                "description": "要删除周围文本的上下文标识符。"
              },
              "offset": {
                "type": "integer",
//@                "description": "The offset from the caret position where deletion will start. This value can be negative."
                "description": "删除开始的位置，表示为从光标位置开始的偏移，可以为负值。"
              },
              "length": {
                "type": "integer",
//@                "description": "The number of characters to be deleted",
                "description": "要删除的字符数目。",
                "minimum": 0
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
//@            "description": "Called when the operation completes.",
            "description": "操作完成时调用。",
            "parameters": []
          }
        ]
      },
      {
        "name": "keyEventHandled",
        "type": "function",
//@        "description": "Indicates that the key event received by onKeyEvent is handled.  This should only be called if the onKeyEvent listener is asynchronous.",
        "description": "表示 onKeyEvent 接收到的键盘事件已处理，只有当 onKeyEvent 监听器为异步时才应该调用该方法。",
        "parameters": [
//@          {"type": "string", "name": "requestId", "description": "Request id of the event that was handled.  This should come from keyEvent.requestId"},
          {"type": "string", "name": "requestId", "description": "处理的事件的请求标识符，应该从 keyEvent.requestId 获得。"},
//@          {"type": "boolean", "name": "response", "description": "True if the keystroke was handled, false if not"}
          {"type": "boolean", "name": "response", "description": "如果按键已处理则为 true，否则为 false。"}
        ]
      }
    ],
    "events": [
      {
        "name": "onActivate",
        "type": "function",
//@        "description": "This event is sent when an IME is activated. It signals that the IME will be receiving onKeyPress events.",
        "description": "输入法激活时发送这一事件，这意味着当前输入法将会接收 onKeyEvent 事件。",
        "parameters": [
          {
            "type": "string",
            "name": "engineID",
//@            "description": "ID of the engine receiving the event"
            "description": "接收这一事件的引擎标识符。"
          }
        ]
      },
      {
        "name": "onDeactivated",
        "type": "function",
//@        "description": "This event is sent when an IME is deactivated. It signals that the IME will no longer be receiving onKeyPress events.",
        "description": "当输入法处于不活动状态时产生，这意味着当前输入法不会继续接收 onKeyEvent 事件。",
        "parameters": [
          {
            "type": "string",
            "name": "engineID",
//@            "description": "ID of the engine receiving the event"
            "description": "接收这一事件的引擎标识符。"
          }
        ]
      },
      {
        "name": "onFocus",
        "type": "function",
//@        "description": "This event is sent when focus enters a text box. It is sent to all extensions that are listening to this event, and enabled by the user.",
        "description": "当焦点进入文本框时发送该事件，它将发送至用户启用并且监听该事件的所有扩展程序。",
        "parameters": [
          {
            "$ref": "InputContext",
            "name": "context",
//@            "description": "Describes the text field that has acquired focus."
            "description": "描述已经获得焦点的文本框。"
          }
        ]
      },
      {
        "name": "onBlur",
        "type": "function",
//@        "description": "This event is sent when focus leaves a text box. It is sent to all extensions that are listening to this event, and enabled by the user.",
        "description": "当焦点离开文本框时发送这一事件，它将发送至用户启用并且监听该事件的所有扩展程序。",
        "parameters": [
          {
            "type": "integer",
            "name": "contextID",
//@            "description": "The ID of the text field that has lost focus. The ID is invalid after this call"
            "description": "失去焦点的文本框标识符，在这一调用后该标识符不再有效。"
          }
        ]
      },
      {
        "name": "onInputContextUpdate",
        "type": "function",
//@        "description": "This event is sent when the properties of the current InputContext change, such as the the type. It is sent to all extensions that are listening to this event, and enabled by the user.",
        "description": "当前的 InputContext（输入上下文）属性（例如类型）更改时发送这一事件，它将发送至用户启用并且监听该事件的所有扩展程序。",
        "parameters": [
          {
            "$ref": "InputContext",
            "name": "context",
//@            "description": "An InputContext object describing the text field that has changed."
            "description": "描述已更改文本框的 InputContext 对象。"
          }
        ]
      },
      {
        "name": "onKeyEvent",
        "type": "function",
//@        "description": "This event is sent if this extension owns the active IME.",
        "description": "如果当前扩展程序独占当前输入法，则会发送这一事件。",
        "options": {
          "supportsFilters": false,
          "supportsListeners": true,
          "supportsRules": false,
          "maxListeners": 1
        },
        "parameters": [
          {
            "type": "string",
            "name": "engineID",
//@            "description": "ID of the engine receiving the event"
            "description": "接收此事件的引擎标识符。"
          },
          {
            "$ref": "KeyboardEvent",
            "name": "keyData",
//@            "description": "Data on the key event"
            "description": "键盘事件的数据。"
          }
        ],
        "extraParameters": [
          {
            "type": "array",
            "optional": true,
            "name": "extraInfoSpec",
//@            "description": "Array of extra information that specifies how the callback is invoked.",
            "description": "包含附加信息的数组，指定回调函数如何调用。",
            "items": {
              "type": "string",
              "enum": ["async"]
            }
          }
        ],
        "returns": {
          "type": "boolean",
//@          "description": "True if the keystroke was handled, false if not.  This function should always return a value if |async| is not specified.",
          "description": "如果处理了这一次按键操作则返回 true，否则返回 false。如果没有指定 \"async\" 的话该函数必须返回一个值。",
          "optional": true
        }
      },
      {
        "name": "onCandidateClicked",
        "type": "function",
//@        "description": "This event is sent if this extension owns the active IME.",
        "description": "如果当前扩展程序独占当前输入法，则会发送这一事件。",
        "parameters": [
          {
            "type": "string",
            "name": "engineID",
//@            "description": "ID of the engine receiving the event"
            "description": "接收这一事件的引擎标识符。"
          },
          {
            "type": "integer",
            "name": "candidateID",
//@            "description": "ID of the candidate that was clicked."
            "description": "单击的候选项标识符。"
          },
          {
            "type": "string",
            "name": "button",
//@            "description": "Which mouse buttons was clicked.",
            "description": "单击了哪个鼠标按钮。",
            "enum": ["left", "middle", "right"]
          }
        ]
      },
      {
        "name": "onMenuItemActivated",
        "type": "function",
//@        "description": "Called when the user selects a menu item",
        "description": "当用户选择菜单项时调用。",
        "parameters": [
          {
            "type": "string",
            "name": "engineID",
//@            "description": "ID of the engine receiving the event"
            "description": "接收此事件的引擎标识符。"
          },
          {
            "type": "string",
            "name": "name",
//@            "description": "Name of the MenuItem which was activated"
            "description": "激活的菜单项名称。"
          }
        ]
      },
      {
        "name": "onSurroundingTextChanged",
        "type": "function",
//@        "description": "Called when the editable string around caret is changed or when the caret position is moved. The text length is limited to 100 characters for each back and forth direction.",
        "description": "当光标周围可编辑的字符串更改或光标位置移动时调用，前进和后退方向的文本长度限制都是 100 个字符。",
        "parameters": [
          {
            "type": "string",
            "name": "engineID",
//@            "description": "ID of the engine receiving the event"
            "description": "接收该事件的引擎标识符。"
          },
          {
            "type": "object",
            "name": "surroundingInfo",
//@            "description": "The surrounding information.",
            "description": "周围文本的信息。",
            "properties": {
              "text": {
                "type": "string",
//@                "description": "The text around cursor."
                "description": "光标周围的文本。"
              },
              "focus": {
                "type": "integer",
//@                "description": "The ending position of the selection. This value indicates caret position if there is no selection."
                "description": "选定内容的结束位置，如果没有选择内容则表示光标位置。"
              },
              "anchor": {
                "type": "integer",
//@                "description": "The beginning position of the selection. This value indicates caret position if is no selection."
                "description": "选定内容的起始位置，如果没有选择内容则表示光标位置。"
              }
            }
          }
        ]
      },
      {
        "name": "onReset",
        "type": "function",
//@        "description": "This event is sent when chrome terminates ongoing text input session.",
        "description": "当 Chrome 浏览器终止正在进行的文字输入会话时发送该事件。",
        "parameters": [
          {
            "type": "string",
            "name": "engineID",
//@            "description": "ID of the engine receiving the event"
            "description": "接收该事件的引擎标识符。"
          }
        ]
      }
    ]
  }
]
