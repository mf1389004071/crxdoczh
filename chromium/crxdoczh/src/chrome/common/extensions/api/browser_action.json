// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace": "browserAction",
//@    "description": "Use browser actions to put icons in the main Google Chrome toolbar, to the right of the address bar. In addition to its <a href='#icon'>icon</a>, a browser action can also have a <a href='#tooltip'>tooltip</a>, a <a href='#badge'>badge</a>, and a <a href = '#popups'>popup</a>.",
    "description": "使用浏览器按钮可以在 Google Chrome 浏览器主窗口中地址栏右侧的工具栏中添加图标。除了<a href='#icon'>图标</a>，浏览器按钮还可以有<a href='#tooltip'>工具提示</a>、<a href='#badge'>徽章</a>和<a href='#popups'>弹出内容</a>。",
    "types": [
      {
        "id": "ColorArray",
        "type": "array",
        "items": {
          "type": "integer",
          "minimum": 0,
          "maximum": 255
        },
        "minItems": 4,
        "maxItems": 4
      },
      {
        "id": "ImageDataType",
        "type": "object",
        "isInstanceOf": "ImageData",
        "additionalProperties": { "type": "any" },
//@        "description": "Pixel data for an image. Must be an ImageData object (for example, from a <code>canvas</code> element)."
        "description": "图片的像素数据，必须为 ImageData 对象（例如来自 <code>canvas</code> 元素）。"
      }
    ],
    "functions": [
      {
        "name": "setTitle",
        "type": "function",
//@        "description": "Sets the title of the browser action. This shows up in the tooltip.",
        "description": "设置浏览器按钮的标题，显示在工具提示中。",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "title": {
                "type": "string",
//@                "description": "The string the browser action should display when moused over."
                "description": "当鼠标移到浏览器按钮上时应显示的字符串。"
              },
              "tabId": {
                "type": "integer",
                "optional": true,
//@                "description": "Limits the change to when a particular tab is selected. Automatically resets when the tab is closed."
                "description": "将更改限制在当某一特定标签页选中时应用，当该标签页关闭时，更改的内容自动恢复。"
              }
            }
          }
        ]
      },
      {
        "name": "getTitle",
        "type": "function",
//@        "description": "Gets the title of the browser action.",
        "description": "获取浏览器按钮的标题。",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "tabId": {
                "type": "integer",
                "optional": true,
//@                "description": "Specify the tab to get the title from. If no tab is specified, the non-tab-specific title is returned."
                "description": "指定要获取标题的标签页。如果没有指定标签页，则返回用于所有标签页的标题。"
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "result",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "setIcon",
        "type": "function",
//@        "description": "Sets the icon for the browser action. The icon can be specified either as the path to an image file or as the pixel data from a canvas element, or as dictionary of either one of those. Either the <b>path</b> or the <b>imageData</b> property must be specified.",
        "description": "设置浏览器按钮的图标。图标既可以指定为图片文件的路径，也可以指定来自 canvas 元素的像素数据，或者这两者中任意一个的词典。<b>path</b> 或 <b>imageData</b> 属性中有且只有一个必须指定。",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "imageData": {
                "choices": [
                  { "$ref": "ImageDataType" },
                  {
                    "type": "object",
                    "properties": {
                      "19": {"$ref": "ImageDataType", "optional": true},
                      "38": {"$ref": "ImageDataType", "optional": true}
                     }
                  }
                ],
                "optional": true,
//@                "description": "Either an ImageData object or a dictionary {size -> ImageData} representing icon to be set. If the icon is specified as a dictionary, the actual image to be used is chosen depending on screen's pixel density. If the number of image pixels that fit into one screen space unit equals <code>scale</code>, then image with size <code>scale</code> * 19 will be selected. Initially only scales 1 and 2 will be supported. At least one image must be specified. Note that 'details.imageData = foo' is equivalent to 'details.imageData = {'19': foo}'"
                "description": "ImageData 对象或一个词典（大小 -&gt; ImageData），表示要设置的图标。如果图标以词典的形式指定，实际使用的图标取决于屏幕的像素密度。如果单位屏幕空间容纳的图片的像素数等于 <code>scale</code>，则会选择大小为 <code>scale</code> * 19的图片。目前只支持缩放比例 1 和 2。至少要指定一个图片。注意“details.imageData = foo”等价于“details.imageData = {'19': foo}”。"
              },
              "path": {
                "choices": [
                  { "type": "string" },
                  {
                    "type": "object",
                    "properties": {
                      "19": {"type": "string", "optional": true},
                      "38": {"type": "string", "optional": true}
                    }
                  }
                ],
                "optional": true,
//@                "description": "Either a relative image path or a dictionary {size -> relative image path} pointing to icon to be set. If the icon is specified as a dictionary, the actual image to be used is chosen depending on screen's pixel density. If the number of image pixels that fit into one screen space unit equals <code>scale</code>, then image with size <code>scale</code> * 19 will be selected. Initially only scales 1 and 2 will be supported. At least one image must be specified. Note that 'details.path = foo' is equivalent to 'details.imageData = {'19': foo}'"
                "description": "图片的相对路径或一个词典（大小 -&gt; 图片的相对路径），指向要设置的图标。如果图标以词典的形式指定，实际使用的图标取决于屏幕的像素密度。如果单位屏幕空间容纳的图片的像素数等于 <code>scale</code>，则会选择大小为 <code>scale </code>* 19的图片。目前只支持缩放比例 1 和 2。至少要指定一个图片。注意“details.path = foo”等价于“details.path = {'19': foo}”。"
              },
              "tabId": {
                "type": "integer",
                "optional": true,
//@                "description": "Limits the change to when a particular tab is selected. Automatically resets when the tab is closed."
                "description": "将更改限制在当某一特定标签页选中时应用，当该标签页关闭时，更改的内容自动恢复。"
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "optional": true,
            "parameters": []
          }
        ]
      },
      {
        "name": "setPopup",
        "type": "function",
//@        "description": "Sets the html document to be opened as a popup when the user clicks on the browser action's icon.",
        "description": "设置当用户单击浏览器按钮时显示为弹出内容的 HTML 文档。",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "tabId": {
                "type": "integer",
                "optional": true,
                "minimum": 0,
//@                "description": "Limits the change to when a particular tab is selected. Automatically resets when the tab is closed."
                "description": "将更改限制在当某一特定标签页选中时应用，当该标签页关闭时，更改的内容自动恢复。"
              },
              "popup": {
                "type": "string",
//@                "description": "The html file to show in a popup.  If set to the empty string (''), no popup is shown."
                "description": "显示在弹出内容中的 HTML 文件，如果设置为空字符串（\"\"）则不显示弹出内容。"
              }
            }
          }
        ]
      },
      {
        "name": "getPopup",
        "type": "function",
//@        "description": "Gets the html document set as the popup for this browser action.",
        "description": "获取设置为浏览器按钮弹出内容的 HTML 文档。",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "tabId": {
                "type": "integer",
                "optional": true,
//@                "description": "Specify the tab to get the popup from. If no tab is specified, the non-tab-specific popup is returned."
                "description": "指定要获取弹出内容的标签页。如果没有指定标签页，则返回用于所有标签页的弹出内容。"
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "result",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "setBadgeText",
        "type": "function",
//@        "description": "Sets the badge text for the browser action. The badge is displayed on top of the icon.",
        "description": "设置浏览器按钮上的徽章，显示在图标上。",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "text": {
                "type": "string",
//@                "description": "Any number of characters can be passed, but only about four can fit in the space."
                "description": "可以传入任意数目的字符，但是只有大约四个字符能显示得下。"
              },
              "tabId": {
                "type": "integer",
                "optional": true,
//@                "description": "Limits the change to when a particular tab is selected. Automatically resets when the tab is closed."
                "description": "将更改限制在当某一特定标签页选中时应用，当该标签页关闭时，更改的内容自动恢复。"
              }
            }
          }
        ]
      },
      {
        "name": "getBadgeText",
        "type": "function",
//@        "description": "Gets the badge text of the browser action. If no tab is specified, the non-tab-specific badge text is returned.",
        "description": "获取浏览器按钮上的徽章，如果没有指定标签页，则返回用于所有标签页的徽章。",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "tabId": {
                "type": "integer",
                "optional": true,
//@                "description": "Specify the tab to get the badge text from. If no tab is specified, the non-tab-specific badge text is returned."
                "description": "指定要获取徽章的标签页。如果没有指定标签页，则返回用于所有标签页的徽章。"
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "result",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "name": "setBadgeBackgroundColor",
        "type": "function",
//@        "description": "Sets the background color for the badge.",
        "description": "设置徽章的背景颜色。",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "color": {
//@                "description": "An array of four integers in the range [0,255] that make up the RGBA color of the badge. For example, opaque red is <code>[255, 0, 0, 255]</code>. Can also be a string with a CSS value, with opaque red being <code>#FF0000</code> or <code>#F00</code>.",
                "description": "含有四个在 [0,255] 范围内的整数的数组，组成徽章的 RGBA 颜色。例如，不透明的红色是 [255, 0, 0, 255]。也可以为 CSS 形式的字符串，例如不透明的红色为 <code>#FF0000</code> 或 <code>#F00</code>。",
                "choices": [
                  {"type": "string"},
                  {"$ref": "ColorArray"}
                ]
              },
              "tabId": {
                "type": "integer",
                "optional": true,
//@                "description": "Limits the change to when a particular tab is selected. Automatically resets when the tab is closed."
                "description": "将更改限制在当某一特定标签页选中时应用，当该标签页关闭时，更改的内容自动恢复。"
              }
            }
          }
        ]
      },
      {
        "name": "getBadgeBackgroundColor",
        "type": "function",
//@        "description": "Gets the background color of the browser action.",
        "description": "获取浏览器按钮上的徽章，如果没有指定标签页，则返回用于所有标签页的徽章。",
        "parameters": [
          {
            "name": "details",
            "type": "object",
            "properties": {
              "tabId": {
                "type": "integer",
                "optional": true,
//@                "description": "Specify the tab to get the badge background color from. If no tab is specified, the non-tab-specific badge background color is returned."
                "description": "指定要获取徽章背景颜色的标签页。如果没有指定标签页，则返回用于所有标签页的徽章背景颜色。"
              }
            }
          },
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "result",
                "$ref": "ColorArray"
              }
            ]
          }
        ]
      },
      {
        "name": "enable",
        "type": "function",
//@        "description": "Enables the browser action for a tab. By default, browser actions are enabled.",
        "description": "为某一标签页启用浏览器按钮。默认情况下，浏览器按钮是启用的。",
        "parameters": [
          {
            "type": "integer",
            "optional": true,
            "name": "tabId",
            "minimum": 0,
//@            "description": "The id of the tab for which you want to modify the browser action."
            "description": "您希望修改浏览器按钮的标签页标识符。"
          }
        ]
      },
      {
        "name": "disable",
        "type": "function",
//@        "description": "Disables the browser action for a tab.",
        "description": "为某一标签页禁用浏览器按钮。",
        "parameters": [
          {
            "type": "integer",
            "optional": true,
            "name": "tabId",
            "minimum": 0,
//@            "description": "The id of the tab for which you want to modify the browser action."
            "description": "您希望修改浏览器按钮的标签页标识符。"
          }
        ]
      },
      {
        "name": "openPopup",
        "type": "function",
//@        "description": "Opens the extension popup window in the active window but does not grant tab permissions.",
        "description": "在当前窗口打开扩展程序的弹出窗口，但是不会授予标签页权限。",
        "nodoc": true,
        "parameters": [
          {
            "type": "function",
            "name": "callback",
            "parameters": [
              {
                "name": "popupView",
                "type": "object",
                "optional": true,
//@                "description": "JavaScript 'window' object for the popup window if it was succesfully opened.",
                "description": "如果成功打开，则为弹出窗口的 JavaScript <code>window</code> 对象。",
                "additionalProperties": { "type": "any" }
              }
            ]
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onClicked",
        "type": "function",
//@        "description": "Fired when a browser action icon is clicked.  This event will not fire if the browser action has a popup.",
        "description": "浏览器按钮的图标单击时产生，如果浏览器按钮有弹出内容则不会触发该事件。",
        "parameters": [
          {
            "name": "tab",
            "$ref": "tabs.Tab"
          }
        ]
      }
    ]
  }
]
