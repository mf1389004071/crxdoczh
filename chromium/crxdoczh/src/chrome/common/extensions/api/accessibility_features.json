// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace": "accessibilityFeatures",
    "platforms": ["chromeos"],
//@    "description": "Use the <code>chrome.accessibilityFeatures</code> API to manage Chrome's accessibility features. This API relies on the <a href='types.html#ChromeSetting'>ChromeSetting prototype of the type API</a> for getting and setting individual accessibility features. In order to get feature states the extension must request <code>accessibilityFeatures.read</code> permission. For modifying feature state, the extension needs <code>accessibilityFeatures.modify</code> permission. Note that <code>accessibilityFeatures.modify</code> does not imply <code>accessibilityFeatures.read</code> permission.",
    "description": "使用 <code>chrome.accessibilityFeatures</code> API 管理 Chrome 浏览器的辅助功能。该 API 使用<a href='types.html#ChromeSetting'>类型 API 的 ChromeSetting 原型</a>获取和设置辅助功能的各种特性。如果要获取特性的状态，扩展程序必须请求 <code>accessibilityFeatures.read</code> 权限。如果要修改特性状态，扩展程序需要 <code>accessibilityFeatures.modify</code> 权限。注意，<code>accessibilityFeatures.modify</code> 权限并不包含 <code>accessibilityFeatures.read</code> 权限。",
    "properties": {
      "spokenFeedback": {
        "$ref": "types.ChromeSetting",
//@        "description": "Spoken feedback (text-to-speech). The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "description": "语音反馈（文字到语音）。该属性的值表示是否启用这种功能。<code>get()</code> 需要 <code>accessibilityFeatures.read</code> 权限，<code>set()</code> 和 <code>clear()</code> 需要 <code>accessibilityFeatures.modify</code> 权限。",
        "value": ["spokenFeedback", {"type": "boolean"}]
      },
      "largeCursor": {
        "$ref": "types.ChromeSetting",
//@        "description": "Enlarged cursor. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "description": "增加光标大小。该属性的值表示是否启用这种功能。<code>get()</code> 需要 <code>accessibilityFeatures.read</code> 权限，<code>set()</code> 和 <code>clear()</code> 需要 <code>accessibilityFeatures.modify</code> 权限。",
        "value": ["largeCursor", {"type": "boolean"}]
      },
      "stickyKeys": {
        "$ref": "types.ChromeSetting",
//@        "description": "Sticky modifier keys (like shift or alt). The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "description": "粘滞键（例如 Shift 或 Alt）。该属性的值表示是否启用这种功能。<code>get()</code> 需要 <code>accessibilityFeatures.read</code> 权限，<code>set()</code> 和 <code>clear()</code> 需要 <code>accessibilityFeatures.modify</code> 权限。",
        "value": ["stickyKeys", {"type": "boolean"}]
      },
      "highContrast": {
        "$ref": "types.ChromeSetting",
//@        "description": "High contrast rendering mode. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "description": "高对比度渲染模式。该属性的值表示是否启用这种功能。<code>get()</code> 需要 <code>accessibilityFeatures.read</code> 权限，<code>set()</code> 和 <code>clear()</code> 需要 <code>accessibilityFeatures.modify</code> 权限。",
        "value": ["highContrast", {"type": "boolean"}]
      },
      "screenMagnifier": {
        "$ref": "types.ChromeSetting",
//@        "description": "Full screen magnification. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "description": "全屏放大。该属性的值表示是否启用这种功能。<code>get()</code> 需要 <code>accessibilityFeatures.read</code> 权限，<code>set()</code> 和 <code>clear()</code> 需要 <code>accessibilityFeatures.modify</code> 权限。",
        "value": ["screenMagnifier", {"type": "boolean"}]
      },
      "autoclick": {
        "$ref": "types.ChromeSetting",
//@        "description":"Auto mouse click after mouse stops moving. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "description":"鼠标停止移动后自动单击鼠标。该属性的值表示是否启用这种功能。<code>get()</code> 需要 <code>accessibilityFeatures.read</code> 权限，<code>set()</code> 和 <code>clear()</code> 需要 <code>accessibilityFeatures.modify</code> 权限。",
        "value": ["autoclick", {"type": "boolean"}]
      },
      "virtualKeyboard": {
        "$ref": "types.ChromeSetting",
//@        "description": "Virtual on-screen keyboard. The value indicates whether the feature is enabled or not. <code>get()</code> requires <code>accessibilityFeatures.read</code> permission. <code>set()</code> and <code>clear()</code> require <code>accessibilityFeatures.modify</code> permission.",
        "description": "虚拟屏幕键盘。该属性的值表示是否启用这种功能。<code>get()</code> 需要 <code>accessibilityFeatures.read</code> 权限，<code>set()</code> 和 <code>clear()</code> 需要 <code>accessibilityFeatures.modify</code> 权限。",
        "value": ["virtualKeyboard", {"type": "boolean"}]
      }
    }
  }
]
