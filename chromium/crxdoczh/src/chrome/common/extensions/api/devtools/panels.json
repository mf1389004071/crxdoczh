// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace": "devtools.panels",
//@    "description": "Use the <code>chrome.devtools.panels</code> API to integrate your extension into Developer Tools window UI: create your own panels, access existing panels, and add sidebars.",
    "description": "使用 <code>chrome.devtools.panels</code> API将您的扩展程序整合到开发者工具窗口用户界面中：创建您自己的面板、访问现有的面板以及添加侧边栏。",
    "nocompile": true,
    "types": [
      {
        "id": "ElementsPanel",
        "type": "object",
//@        "description": "Represents the Elements panel.",
        "description": "代表元素面板。",
        "events": [
          {
            "name": "onSelectionChanged",
//@            "description": "Fired when an object is selected in the panel."
            "description": "当面板中某一对象选定时产生。"
          }
        ],
        "functions": [
          {
            "name": "createSidebarPane",
            "type": "function",
//@            "description": "Creates a pane within panel's sidebar.",
            "description": "在面板的侧边栏中创建窗格。",
            "parameters": [
              {
                "name": "title",
                "type": "string",
//@                "description": "Text that is displayed in sidebar caption."
                "description": "显示在侧边栏标题中的文字。"
              },
              {
                "name": "callback",
                "type": "function",
//@                "description": "A callback invoked when the sidebar is created.",
                "description": "侧边栏创建时调用的函数。",
                "optional": true,
                "parameters": [
                  {
                    "name": "result",
//@                    "description": "An ExtensionSidebarPane object for created sidebar pane.",
                    "description": "新创建的侧边栏窗格所对应的 ExtensionSidebarPane 对象。",
                    "$ref": "ExtensionSidebarPane"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "id": "ExtensionPanel",
        "type": "object",
//@        "description": "Represents a panel created by extension.",
        "description": "代表扩展程序创建的面板。",
        "functions": [
          {
            "name": "createStatusBarButton",
//@            "description": "Appends a button to the status bar of the panel.",
            "description": "向面板状态栏添加一个按钮。",
            "parameters": [
              {
                "name": "iconPath",
                "type": "string",
//@                "description": "Path to the icon of the button. The file should contain a 64x24-pixel image composed of two 32x24 icons. The left icon is used when the button is inactive; the right icon is displayed when the button is pressed."
                "description": "指向按钮图标的路径。文件应该包含 64×24 像素的图片，由两个 32×24 像素的图标组成。左边的图标在按钮不活动时使用，右边的图标在按钮按下时显示。"
              },
              {
                "name": "tooltipText",
                "type": "string",
//@                "description": "Text shown as a tooltip when user hovers the mouse over the button."
                "description": "当用户将鼠标悬停在按钮上时显示为工具提示的文字。"
              },
              {
                "name": "disabled",
                "type": "boolean",
//@                "description": "Whether the button is disabled."
                "description": "按钮是否已禁用。"
              }
            ],
            "returns": { "$ref": "Button" }
          }
        ],
        "events": [
          {
            "name": "onSearch",
//@            "description": "Fired upon a search action (start of a new search, search result navigation, or search being canceled).",
            "description": "进行搜索操作（新搜索的开始、搜索结果的导航或者搜索取消）时产生。",
            "parameters": [
              {
                "name": "action",
                "type": "string",
//@                "description": "Type of search action being performed."
                "description": "正在进行的搜索操作类型。"
              },
              {
                "name": "queryString",
                "type": "string",
                "optional": true,
//@                "description": "Query string (only for 'performSearch')."
                "description": "查询字符串（仅用于 'performSearch' 类型）。"
              }
            ]
          },
          {
            "name": "onShown",
            "type": "function",
//@            "description": "Fired when the user switches to the panel.",
            "description": "当用户切换到这一面板时产生。",
            "parameters": [
              {
                "name": "window",
                "type": "object",
                "isInstanceOf": "global",
                "additionalProperties": { "type": "any" },
//@                "description": "The JavaScript <code>window</code> object of panel's page."
                "description": "面板页面的 JavaScript <code>window</code> 对象。"
              }
            ]
          },
          {
            "name": "onHidden",
            "type": "function",
//@            "description": "Fired when the user switches away from the panel."
            "description": "当用户切换至其他面板时产生。"
          }
        ]
      },
      {
        "id": "ExtensionSidebarPane",
        "type": "object",
//@        "description": "A sidebar created by the extension.",
        "description": "扩展程序创建的侧边栏。",
        "functions": [
          {
            "name": "setHeight",
            "type": "function",
//@            "description": "Sets the height of the sidebar.",
            "description": "设置侧边栏高度。",
            "parameters": [
              {
                "name": "height",
                "type": "string",
//@                "description": "A CSS-like size specification, such as <code>'100px'</code> or <code>'12ex'</code>."
                "description": "类似 CSS 中指定的大小，例如 <code>'100px'</code> 或 <code>'12ex'</code>。"
              }
            ]
          },
          {
            "name": "setExpression",
            "type": "function",
//@            "description": "Sets an expression that is evaluated within the inspected page. The result is displayed in the sidebar pane.",
            "description": "设置在审查的页面中求值的表达式，结果将显示在侧边栏窗格中。",
            "parameters": [
              {
                "name": "expression",
                "type": "string",
//@                "description": "An expression to be evaluated in context of the inspected page. JavaScript objects and DOM nodes are displayed in an expandable tree similar to the console/watch."
                "description": "要在审查的页面上下文中求值的表达式。JavaScript 对象以及 DOM 节点将显示为与控制台/监视中类似的可展开的树。"
              },
              {
                "name": "rootTitle",
                "type": "string",
                "optional": true,
//@                "description": "An optional title for the root of the expression tree."
                "description": "表达式树根节点标题（可选）。"
              },
              {
                "name": "callback",
                "type": "function",
                "optional": true,
//@                "description": "A callback invoked after the sidebar pane is updated with the expression evaluation results."
                "description": "表达式求值结果在侧边栏窗格中更新后调用的回调函数。"
              }
            ]
          },
          {
            "name": "setObject",
            "type": "function",
//@            "description": "Sets a JSON-compliant object to be displayed in the sidebar pane.",
            "description": "设置要显示在侧边栏窗格中的 JSON 对象。",
            "parameters": [
              {
                "name": "jsonObject",
                "type": "string",
//@                "description": "An object to be displayed in context of the inspected page. Evaluated in the context of the caller (API client)."
                "description": "要显示的审查页面上下文中的对象，在调用者（API 客户端）上下文中求值。"
              },
              {
                "name": "rootTitle",
                "type": "string",
                "optional": true,
//@                "description": "An optional title for the root of the expression tree."
                "description": "表达式树根节点标题（可选）。"
              },
              {
                "name": "callback",
                "type": "function",
                "optional": true,
//@                "description": "A callback invoked after the sidebar is updated with the object."
                "description": "对象在侧边栏窗格中更新后调用的回调函数。"
              }
            ]
          },
          {
            "name": "setPage",
            "type": "function",
//@            "description": "Sets an HTML page to be displayed in the sidebar pane.",
            "description": "设置显示在侧边栏窗格中的 HTML 页面。",
            "parameters": [
              {
                "name": "path",
                "type": "string",
//@                "description": "Relative path of an extension page to display within the sidebar."
                "description": "显示在侧边栏中的扩展程序页面的相对路径。"
              }
            ]
          }
        ],
        "events": [
          {
            "name": "onShown",
            "type": "function",
//@            "description": "Fired when the sidebar pane becomes visible as a result of user switching to the panel that hosts it.",
            "description": "当侧边栏窗格由于用户切换到包含它的面板而可见时产生。",
            "parameters": [
              {
                "name": "window",
                "type": "object",
                "isInstanceOf": "global",
                "additionalProperties": { "type": "any" },
//@                "description": "The JavaScript <code>window</code> object of the sidebar page, if one was set with the <code>setPage()</code> method."
                "description": "侧边栏页面的 JavaScript <code>window</code> 对象，如果已经用 <code>setPage()</code> 方法设置过的话。"
              }
            ]
          },
          {
            "name": "onHidden",
            "type": "function",
//@            "description": "Fired when the sidebar pane becomes hidden as a result of the user switching away from the panel that hosts the sidebar pane."
            "description": "当侧边栏窗格由于用户切换至其他面板而隐藏时产生。"
          }
        ]
      },
      {
        "id": "Button",
        "type": "object",
//@        "description": "A button created by the extension.",
        "description": "由扩展程序创建的按钮。",
        "functions": [
          {
            "name": "update",
//@            "description": "Updates the attributes of the button. If some of the arguments are omitted or <code>null</code>, the corresponding attributes are not updated.",
            "description": "更新按钮属性。如果某些参数省略或者为 <code>null</code>，相应的属性就不更新。",
            "parameters": [
              {
                "name": "iconPath",
                "type": "string",
                "optional": true,
//@                "description": "Path to the new icon of the button."
                "description": "指向按钮新图标的路径。"
              },
              {
                "name": "tooltipText",
                "type": "string",
                "optional": true,
//@                "description": "Text shown as a tooltip when user hovers the mouse over the button."
                "description": "当用户将鼠标悬停在按钮上时显示为工具提示的文字。"
              },
              {
                "name": "disabled",
                "type": "boolean",
                "optional": true,
//@                "description": "Whether the button is disabled."
                "description": "按钮是否已禁用。"
              }
            ]
          }
        ],
        "events": [
          {
            "name": "onClicked",
            "type": "function",
//@            "description": "Fired when the button is clicked."
            "description": "按钮单击时产生。"
          }
        ]
      }
    ],
    "properties": {
      "elements": {
        "$ref": "ElementsPanel",
//@        "description": "Elements panel."
        "description": "元素面板。"
      }
    },
    "functions": [
      {
        "name": "create",
        "type": "function",
//@        "description": "Creates an extension panel.",
        "description": "创建扩展程序面板。",
        "parameters": [
          {
            "name": "title",
            "type": "string",
//@            "description": "Title that is displayed next to the extension icon in the Developer Tools toolbar."
            "description": "在开发者工具的工具栏中显示在扩展程序图标旁的标题。"
          },
          {
            "name": "iconPath",
            "type": "string",
//@            "description": "Path of the panel's icon relative to the extension directory."
            "description": "面板图标的 URL，相对于扩展程序目录。"
          },
          {
            "name": "pagePath",
            "type": "string",
//@            "description": "Path of the panel's HTML page relative to the extension directory."
            "description": "面板的 HTML 页面 URL，相对于扩展程序目录。"
          },
          {
            "name": "callback",
            "type": "function",
            "optional": true,
//@            "description": "A function that is called when the panel is created.",
            "description": "面板创建后调用的函数。",
            "parameters": [
              {
                "name": "panel",
//@                "description": "An ExtensionPanel object representing the created panel.",
                "description": "代表已创建面板的 ExtensionPanel 对象。",
                "$ref": "ExtensionPanel"
              }
            ]
          }
        ]
      },
      {
        "name": "setOpenResourceHandler",
        "type": "function",
//@        "description": "Specifies the function to be called when the user clicks a resource link in the Developer Tools window. To unset the handler, either call the method with no parameters or pass null as the parameter.",
        "description": "指定当用户单击开发者工具窗口中的某个资源链接时要调用的函数。要取消这一处理函数，不带参数调用这一方法或者传递 null 作为参数。",
        "parameters": [
          {
            "name": "callback",
            "type": "function",
            "optional": true,
//@            "description": "A function that is called when the user clicks on a valid resource link in Developer Tools window. Note that if the user clicks an invalid URL or an XHR, this function is not called.",
            "description": "当用户单击开发者工具窗口中的某个有效资源链接时调用的函数。注意，如果用户单击了无效的 URL 或者 XHR，不会调用这一函数。",
            "parameters": [
              {
                "name": "resource",
                "$ref": "devtools.inspectedWindow.Resource",
//@                "description": "A $ref:devtools.inspectedWindow.Resource object for the resource that was clicked."
                "description": "单击的资源对应的 $ref:devtools.inspectedWindow.Resource 对象。"
              }
            ]
          }
        ]
      }
    ]
  }
]
