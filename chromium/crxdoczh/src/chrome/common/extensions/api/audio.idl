// Copyright (c) 2013 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// <!--@The <code>chrome.audio</code> API is provided to allow users to
// get information about and control the audio devices attached to the
// system. This API is currently only implemented for ChromeOS.-->
// <code>chrome.audio</code> API
// 允许用户获取连接到系统的音频设备信息，并控制它们。目前该 API
// 仅在 Chrome OS 上实现。
namespace audio {

  dictionary OutputDeviceInfo {
    // <!--@The unique identifier of the audio output device.-->
    // 音频输出设备的唯一标志符。
    DOMString id;
    // <!--@The user-friendly name (e.g. "Bose Amplifier").-->
    // 用户友好的名称（例如“Bose Amplifier”）。
    DOMString name;
    // i<!--@True if this is the current active device.-->
    // 如果是当前活动的设备则为 true。
    boolean isActive;
    // <!--@True if this is muted.-->
    // 如果已静音则为 true。
    boolean isMuted;
    // <!--@The output volume ranging from 0.0 to 1.0.-->
    // 输出音量，范围为 0.0 到 1.0。
    double volume;
  };

  dictionary InputDeviceInfo {
    // <!--@The unique identifier of the audio input device.-->
    // 音频输入设备的唯一标志符。
    DOMString id;
    // <!--@The user-friendly name (e.g. "USB Microphone").-->
    // 用户友好的名称（例如“USB 麦克风”）。
    DOMString name;
    // <!--@True if this is the current active device.-->
    // 如果是当前活动的设备则为 true。
    boolean isActive;
    // <!--@True if this is muted.-->
    // 如果已静音则为 true。
    boolean isMuted;
    // <!--@The input gain ranging from 0.0 to 1.0.-->
    // 输入增益，从 0.0 到 1.0。
    double gain;
  };

  dictionary DeviceProperties {
    // <!--@True if this is muted.-->
    // 如果已静音则为 true。
    boolean isMuted;
    // <!--@If this is an output device then this field indicates the output volume.
    // If this is an input device then this field is ignored.-->
    // 如果是输出设备则该字段表示输出音量，如果是输入设备则忽略该字段。
    double? volume;
    // <!--@If this is an input device then this field indicates the input gain.
    // If this is an output device then this field is ignored.-->
    // 如果是输入设备则该字段表示输入增益，如果是输出设备则忽略该字段。
    double? gain;
  };

  callback GetInfoCallback = void(OutputDeviceInfo[] outputInfo,
                                  InputDeviceInfo[] inputInfo);
  callback SetActiveDevicesCallback = void();
  callback SetPropertiesCallback = void();

  interface Functions {
    // <!--@Get the information of all audio output and input devices.-->
    // 获取所有音频输出与输入设备的信息。
    static void getInfo(GetInfoCallback callback);

    // <!--@Select a subset of audio devices as active.-->
    // 将一部分音频设备设置为活动设备。
    static void setActiveDevices(DOMString[] ids,
                                 SetActiveDevicesCallback callback);

    // <!--@Sets the properties for the input or output device.-->
    // 为输入或输出设备设置属性。
    static void setProperties(DOMString id,
                              DeviceProperties properties,
                              SetPropertiesCallback callback);
  };

  interface Events {
    // <!--@Fired when anything changes to the audio device configuration.-->
    // 音频设备配置更改时产生。
    static void onDeviceChanged();
  };
};
