// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// <!--@Use the <code>chrome.app.runtime</code> API to manage the app lifecycle.
// The app runtime manages app installation, controls the event page, and can
// shut down the app at anytime.-->
// 使用 <code>chrome.app.runtime</code> API
// 管理应用的生命周期。应用运行时环境管理应用的安装，控制事件页面，并且可以在任何时候关闭应用。
namespace app.runtime {

  [inline_doc] dictionary LaunchItem {
    // <!--@FileEntry for the file.-->
    // 文件的 <code>FileEntry</code>。
    [instanceOf=FileEntry] object entry;

    // <!--@The MIME type of the file.-->
    // 文件的 MIME 类型。
    DOMString type;
  };

  // <!--@Optional data for the launch. Either <code>items</code>, or
  // the pair (<code>url, referrerUrl</code>) can be present for any given
  // launch.-->
  // 启动时的可选数据。每一次启动时可能有 <code>items</code> 属性，也可能有
  // <code>url</code>、<code>referrerUrl</code> 这两个属性。
  [inline_doc] dictionary LaunchData {
    // <!--@The ID of the file or URL handler that the app is being invoked with.
    // Handler IDs are the top-level keys in the <code>file_handlers</code>
    // and/or <code>url_handlers</code> dictionaries in the manifest.-->
    // 调用应用的文件处理器标识符。处理器标识符为清单文件中
    // <code>file_handlers</code> 和/或 <code>url_handlers</code>
    // 词典中的顶层键。
    DOMString? id;

    // <!--@The file entries for the <code>onLaunched</code> event triggered by a
    // matching file handler in the <code>file_handlers</code> manifest key.-->
    // 匹配清单文件 <code>file_handlers</code> 中的文件处理器而触发的
    // <code>onLaunched</code> 事件的文件项。
    LaunchItem[]? items;

    // <!--@The URL for the <code>onLaunched</code> event triggered by a matching
    // URL handler in the <code>url_handlers</code> manifest key.-->
    // 匹配清单文件 <code>url_handlers</code> 中的 URL 处理器而触发的
    // <code>onLaunched</code> 事件的 URL。
    DOMString? url;

    // <!--@The referrer URL for the <code>onLaunched</code> event triggered by a
    // matching URL handler in the <code>url_handlers</code> manifest key.-->
    // 匹配清单文件 <code>url_handlers</code> 中的 URL 处理器而触发的
    // <code>onLaunched</code> 事件的引用 URL。
    DOMString? referrerUrl;

    // <!--@Whether the app is being launched in a <a
    // href="https://support.google.com/chromebook/answer/3134673">Chrome OS
    // kiosk session</a>.-->
    // 应用是否在 <a
    // href="https://support.google.com/chromebook/answer/3134673">Chrome OS
    // 信息亭模式</a>下启动。
    boolean? isKioskSession;
  };

  // <!--@This object specifies details and operations to perform on the embedding
  // request. The app to be embedded can make a decision on whether or not to
  // allow the embedding and what to embed based on the embedder making the
  // request.-->
  // 该对象指定嵌入请求的详情和操作，被嵌入的应用可以决定是否允许嵌入，并根据发出请求的嵌入者决定嵌入的内容。
  dictionary EmbedRequest {
    DOMString embedderId;

    // <!--@Optional developer specified data that the app to be embedded can use
    // when making an embedding decision.-->
    // 开发者指定的可选数据，嵌入的应用可以利用它决定嵌入后的行为。
    any? data;

    // <!--@Allows <code>embedderId</code> to embed this app in an &lt;appview&gt;
    // element. The <code>url</code> specifies the content to embed.-->
    // 允许 <code>embedderId</code> 通过 &lt;appview&gt;
    // 元素嵌入该应用，<code>url</code> 指定要嵌入的内容。
    [nocompile] static void allow(DOMString url);

    // <!--@Prevents <code> embedderId</code> from embedding this app in an
    // &lt;appview&gt; element.-->
    // 阻止 <code>embedderId</code> 通过 &lt;appview&gt; 元素嵌入该应用。
    [nocompile] static void deny();
  };

  interface Events {
    // <!--@Fired when an embedding app requests to embed this app. This event is
    // only available on dev channel with the flag --enable-app-view.-->
    // 其他应用请求嵌入该应用时产生。该事件仅在 Dev 分支上，并且指定
    // --enable-app-view 参数的情况下才可用。
    static void onEmbedRequested(EmbedRequest request);

    // <!--@Fired when an app is launched from the launcher.-->
    // 应用从执行器执行时产生。
    static void onLaunched(optional LaunchData launchData);

    // <!--@Fired at Chrome startup to apps that were running when Chrome last shut
    // down.-->
    // 当 Chrome 浏览器启动时产生，用于 Chrome
    // 浏览器上一次关闭时正在运行的应用。
    static void onRestarted();
  };
};
