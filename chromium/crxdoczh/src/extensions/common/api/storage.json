// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

[
  {
    "namespace": "storage",
//@    "description": "Use the <code>chrome.storage</code> API to store, retrieve, and track changes to user data.",
    "description": "使用 <code>chrome.storage</code> API 存储、获取用户数据，追踪用户数据的更改。",
    "unprivileged": true,
    "types": [
      {
        "id": "StorageChange",
        "type": "object",
        "properties": {
          "oldValue": {
            "type": "any",
//@            "description": "The old value of the item, if there was an old value.",
            "description": "如果有旧值，则为项目的旧值。",
            "optional": true
          },
          "newValue": {
            "type": "any",
//@            "description": "The new value of the item, if there is a new value.",
            "description": "如果有新值，则为项目的新值。",
            "optional": true
          }
        }
      },
      {
        "id": "StorageArea",
        "type": "object",
        "js_module": "StorageArea",
        "functions": [
          {
            "name": "get",
            "type": "function",
//@            "description": "Gets one or more items from storage.",
            "description": "从存储中获得一个或多个值。",
            "parameters": [
              {
                "name": "keys",
                "choices": [
                  { "type": "string" },
                  { "type": "array", "items": { "type": "string" } },
                  {
                    "type": "object",
                    "description": "Storage items to return in the callback, where the values are replaced with those from storage if they exist.",
                    "additionalProperties": { "type": "any" }
                  }
                ],
//@                "description": "A single key to get, list of keys to get, or a dictionary specifying default values (see description of the object).  An empty list or object will return an empty result object.  Pass in <code>null</code> to get the entire contents of storage.",
                "description": "要获得的单个键、多个键的列表或者指定默认值的词典（参见对象的描述），空的列表或对象将会返回空的结果对象。要获得存储的所有内容，请传递 <code>null</code>。",
                "optional": true
              },
              {
                "name": "callback",
                "type": "function",
//@                "description": "Callback with storage items, or on failure (in which case $(ref:runtime.lastError) will be set).",
                "description": "包含存储项目或者表示失败（这种情况下会设置 $(ref:runtime.lastError)）的回调函数。",
                "parameters": [
                  {
                    "name": "items",
                    "type": "object",
                    "additionalProperties": { "type": "any" },
//@                    "description": "Object with items in their key-value mappings."
                    "description": "包含按键-值映射的项目对象。"
                  }
                ]
              }
            ]
          },
          {
            "name": "getBytesInUse",
            "type": "function",
//@            "description": "Gets the amount of space (in bytes) being used by one or more items.",
            "description": "获得一个或多个项目正在使用的空间大小（以字节为单位）。",
            "parameters": [
              {
                "name": "keys",
                "choices": [
                  { "type": "string" },
                  { "type": "array", "items": { "type": "string" } }
                ],
//@                "description": "A single key or list of keys to get the total usage for. An empty list will return 0. Pass in <code>null</code> to get the total usage of all of storage.",
                "description": "要获得总计使用空间的单个键或多个键的列表，空的列表或对象将会返回 0。要获得所有存储占用的总空间，请传递 <code>null</code>。",
                "optional": true
              },
              {
                "name": "callback",
                "type": "function",
//@                "description": "Callback with the amount of space being used by storage, or on failure (in which case $(ref:runtime.lastError) will be set).",
                "description": "回调函数，将传递存储占用的空间大小，或者指示失败（这种情况下将会设置 $(ref:runtime.lastError)）",
                "parameters": [
                  {
                    "name": "bytesInUse",
                    "type": "integer",
//@                    "description": "Amount of space being used in storage, in bytes."
                    "description": "正在使用的存储空间大小，以字节为单位。"
                  }
                ]
              }
            ]
          },
          {
            "name": "set",
            "type": "function",
//@            "description": "Sets multiple items.",
            "description": "设置多个项目。",
            "parameters": [
              {
                "name": "items",
                "type": "object",
                "additionalProperties": { "type": "any" },
//@                "description": "<p>An object which gives each key/value pair to update storage with. Any other key/value pairs in storage will not be affected.</p><p>Primitive values such as numbers will serialize as expected. Values with a <code>typeof</code> <code>\"object\"</code> and <code>\"function\"</code> will typically serialize to <code>{}</code>, with the exception of <code>Array</code> (serializes as expected), <code>Date</code>, and <code>Regex</code> (serialize using their <code>String</code> representation).</p>"
                "description": "<p>包含要更新的键/值对的对象，存储中的其他键/值对不会受到影响。</p><p>像数值之类的原生值会以预期的方式序列化，除了<code>Array</code>（按照预期的方式序列化）、<code>Date</code> 和 <code>RegExp</code>（以字符串表示形式序列化）以外，<code>typeof</code> 为 <code>\"object\"</code> 和 <code>\"function\"</code> 的值通常序列化为 <code>{}</code>。"
              },
              {
                "name": "callback",
                "type": "function",
//@                "description": "Callback on success, or on failure (in which case $(ref:runtime.lastError) will be set).",
                "description": "在成功或失败（这种情况下会设置 $(ref:runtime.lastError)）时调用。",
                "parameters": [],
                "optional": true
              }
            ]
          },
          {
            "name": "remove",
            "type": "function",
//@            "description": "Removes one or more items from storage.",
            "description": "从存储中移除一个或多个项目。",
            "parameters": [
              {
                "name": "keys",
                "choices": [
                  {"type": "string"},
                  {"type": "array", "items": {"type": "string"}}
                ],
//@                "description": "A single key or a list of keys for items to remove."
                "description": "单个键或多个键的列表，表示要移除的内容。"
              },
              {
                "name": "callback",
                "type": "function",
//@                "description": "Callback on success, or on failure (in which case $(ref:runtime.lastError) will be set).",
                "description": "在成功或失败（这种情况下会设置 $(ref:runtime.lastError)）时调用。",
                "parameters": [],
                "optional": true
              }
            ]
          },
          {
            "name": "clear",
            "type": "function",
//@            "description": "Removes all items from storage.",
            "description": "从存储中删除所有值。",
            "parameters": [
              {
                "name": "callback",
                "type": "function",
//@                "description": "Callback on success, or on failure (in which case $(ref:runtime.lastError) will be set).",
                "description": "在成功或失败（这种情况下会设置 $(ref:runtime.lastError)）时调用。",
                "parameters": [],
                "optional": true
              }
            ]
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onChanged",
        "type": "function",
//@        "description": "Fired when one or more items change.",
        "description": "当一个或多个项目更改时产生。",
        "parameters": [
          {
            "name": "changes",
            "type": "object",
            "additionalProperties": { "$ref": "StorageChange" },
//@            "description": "Object mapping each key that changed to its corresponding $(ref:storage.StorageChange) for that item."
            "description": "一个对象，将更改的每一个键映射到该项目对应的 $(ref:StorageChange) 对象。"
          },
          {
            "name": "areaName",
            "type": "string",
//@            "description": "The name of the storage area (<code>\"sync\"</code>, <code>\"local\"</code> or <code>\"managed\"</code>) the changes are for."
            "description": "这一更改对应的存储区（\"sync\"（同步）、\"local\"（本机）或 <code>\"managed\"</code>））。"
          }
        ]
      }
    ],
    "properties": {
      "sync": {
        "$ref": "StorageArea",
//@        "description": "Items in the <code>sync</code> storage area are synced using Chrome Sync.",
        "description": "位于 <code>sync</code>（同步）存储区下的项目将通过 Chrome 浏览器的同步功能同步。",
        "value": [ "sync" ],
        "properties": {
          "QUOTA_BYTES": {
            "value": 102400,
//@            "description": "The maximum total amount (in bytes) of data that can be stored in sync storage, as measured by the JSON stringification of every value plus every key's length. Updates that would cause this limit to be exceeded fail immediately and set $(ref:runtime.lastError)."
            "description": "可以在同步存储区储存的数据量大小（以字节为单位），计算方式为每一个值 JSON 字符串化的结果加上每一个键的长度。超出该限制的更新将失败，并设置 $(ref:runtime.lastError)。"
          },
          "QUOTA_BYTES_PER_ITEM": {
            "value": 8192,
//@            "description": "The maximum size (in bytes) of each individual item in sync storage, as measured by the JSON stringification of its value plus its key length. Updates containing items larger than this limit will fail immediately and set $(ref:runtime.lastError)."
            "description": "同步存储区中每个项目的最大大小（以字节为单位），计算方式为值 JSON 字符串化的结果加上键的长度。包含的项目比该限制大的更新将失败，并设置 $(ref:runtime.lastError)。"
          },
          "MAX_ITEMS": {
            "value": 512,
//@            "description": "The maximum number of items that can be stored in sync storage. Updates that would cause this limit to be exceeded will fail immediately and set $(ref:runtime.lastError)."
            "description": "可以储存在同步存储区中的最大项目数目。超出该限制的更新将失败，并设置 $(ref:runtime.lastError)。"
          },
          "MAX_WRITE_OPERATIONS_PER_HOUR": {
            "value": 1000,
//@            "description": "The maximum number of <code>set</code>, <code>remove</code>, or <code>clear</code> operations that can be performed each hour. Updates that would cause this limit to be exceeded fail immediately and set $(ref:runtime.lastError)."
            "description": "一小时内可以进行的 <code>se</code>（设置）、<code>remove</code>（移除）或<code>clear</code>（清除）操作的最大次数。超出该限制的更新将失败，并设置 $(ref:runtime.lastError)。"
          },
          "MAX_SUSTAINED_WRITE_OPERATIONS_PER_MINUTE": {
            "value": 10,
//@            "description": "The maximum number of <code>set</code>, <code>remove</code>, or <code>clear</code> operations that can be performed each minute, sustained over 10 minutes. Updates that would cause this limit to be exceeded fail immediately and set $(ref:runtime.lastError)."
            "description": "在连续的 10 分钟内每分钟可以进行的 <code>se</code>（设置）、<code>remove</code>（移除）或<code>clear</code>（清除）操作的最大次数。超出该限制的更新将失败，并设置 $(ref:runtime.lastError)。"
          }
        }
      },
      "local": {
        "$ref": "StorageArea",
//@        "description": "Items in the <code>local</code> storage area are local to each machine.",
        "description": "位于 <code>local</code>（本机）存储区下的项目仅对每一台计算机有效。",
        "value": [ "local" ],
        "properties": {
          "QUOTA_BYTES": {
            "value": 5242880,
//@            "description": "The maximum amount (in bytes) of data that can be stored in local storage, as measured by the JSON stringification of every value plus every key's length. This value will be ignored if the extension has the <code>unlimitedStorage</code> permission. Updates that would cause this limit to be exceeded fail immediately and set $(ref:runtime.lastError)."
            "description": "可以在本地存储区储存的数据量大小（以字节为单位），计算方式为每一个值 JSON 字符串化的结果加上每一个键的长度。如果扩展程序拥有 <code>unlimitedStorage</code> 权限则会忽略这一值。"
          }
        }
      },
      "managed": {
        "$ref": "StorageArea",
//@        "description": "Items in the <code>managed</code> storage area are set by the domain administrator, and are read-only for the extension; trying to modify this namespace results in an error.",
        "description": "<code>managed</code> 存储区中的项目由域管理员设置，对扩展程序来说只读，尝试修改这一命名空间会导致错误。",
        "value": [ "managed" ]
      }
    }
  }
]
