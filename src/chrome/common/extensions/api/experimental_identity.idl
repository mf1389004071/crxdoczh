// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// The <code>chrome.experimental.identity</code> API.
namespace experimental.identity {

  [inline_doc] dictionary ExperimentalTokenDetails {
    // <!--@Whether to prompt the user to log in or grant scope permissions (if they
    // have not already done so). Default is false.-->
    // 是否要提示用户登录或者授予部分权限（如果还没有做的话），默认为
    // false。
    boolean? interactive;
  };

  [inline_doc] dictionary ExperimentalWebAuthFlowDetails {
    // <!--@The URL that initiates the auth flow.-->
    // 开始认证流程的 URL。
    DOMString url;

    // <!--@Whether to launch auth flow in interactive mode. Default is false.-->
    // 是否要以交互模式执行认证流程，默认为 false。
    boolean? interactive;

    // <!--@Width of the window, if one is shown in interactive mode.-->
    // 如果交互模式下要显示窗口的话指定窗口的宽度。
    long? width;

    // <!--@Height of the window, if one is shown in interactive mode.-->
    // 如果交互模式下要显示窗口的话指定窗口的高度。
    long? height;

    // <!--@X coordinate of the window, if one is shown in interactive mode.-->
    // 如果交互模式下要显示窗口的话指定窗口的 X 坐标。
    long? left;

    // <!--@Y coordinate of the window, if one is shown in interactive mode.-->
    // 如果交互模式下要显示窗口的话指定窗口的 Y 坐标。
    long? top;
  };

  callback GetAuthTokenCallback = void (optional DOMString token);
  callback InvalidateAuthTokenCallback = void ();
  callback LaunchWebAuthFlowCallback = void (optional DOMString responseUrl);

  interface Functions {
    // <!--@Gets an OAuth2 access token as specified by the manifest.-->
    // 获取如清单文件中所指定的 OAuth2 访问令牌。
    //
    // |details| : <!--@Token options.-->
    // 令牌选项。
    // |callback| : <!--@Called with an OAuth2 access token as specified by the
    // manifest, or undefined if there was an error.-->
    // 调用时传递清单文件中指定的 OAuth2 访问令牌，如果发生错误则为
    // undefined。
    static void getAuthToken(optional ExperimentalTokenDetails details,
                             GetAuthTokenCallback callback);

    // <!--@Starts an auth flow at the specified URL.-->
    // 在指定 URL 开始认证流程。
    //
    // |details| : <!--@WebAuth flow options.-->
    // WebAuth 流程选项。
    // |callback| : <!--@Called with the URL redirected back to your application.-->
    // 调用时传递重定向回您的应用程序的 URL。
    static void launchWebAuthFlow(ExperimentalWebAuthFlowDetails details,
                                  LaunchWebAuthFlowCallback callback);
  };
};
