// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// <!--@An experimental API that expands upon the <code>chrome.mediaGalleries</code>
// API's functionality.-->
// 扩展 <code>chrome.mediaGalleries</code> API 功能的实验性 API。
namespace experimental.mediaGalleries {

  callback AssembleMediaFileCallback =
      void ([instanceOf=Blob] optional object mediaFile);

  interface Functions {
    // <!--@Create a new MediaFile setting the metadata in the Blob to the supplied
    // values, overriding any existing metadata in the media file. If user agent
    // does not recognize the Blob as a supported file format, it will fail.-->
    // 创建新的媒体文件，并将 Blob
    // 中的元数据设为指定值，覆盖媒体文件中现有的元数据。如果用户代理不能将
    // Blob 识别为某种支持的文件类型，该方法将失败。
    // |mediaFileContents| : <!--@the media bytes.-->
    // 媒体字节。
    // |metadata| : <!--@the metadata. TODO(estade): this should be
    // [instanceOf=Metafile].-->
    // 元数据。TODO
    static void assembleMediaFile(
        [instanceOf=Blob] object mediaFileContents,
        object metadata,
        AssembleMediaFileCallback callback);

    // <!--@Get any thumbnails contained in the passed media file. The resulting
    // directory reader refers to a virtual directory that can not be navigated
    // to. If there are no thumbnails in the passed file entry, the virtual
    // directory will have no entries.
    // TODO(estade): The return type should be Directory. The argument type
    // should be [instanceOf=FileEntry].-->
    // 获取传递的媒体文件中包含的缩略图，得到的目录读取器引用一个无法浏览的虚拟目录。如果在传递的文件项中不包含缩略图，虚拟目录不包含项目。TODO
    [nocompile] static object extractEmbeddedThumbnails(object mediaFile);
  };

};
